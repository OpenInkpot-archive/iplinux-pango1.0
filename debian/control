Source: pango1.0
Section: gui
Priority: optional
Maintainer: Alexander Kerner <lunohod@openinkpot.org>
Build-Depends: debhelper, cdbs, libfreetype6-dev, libglib2.0-dev, pkg-config, libfontconfig1-dev, libexpat1-dev, autotools-dev, autoconf, libtool, automake
XCS-Cross-Build-Depends: libfreetype6-dev, libglib2.0-dev, libfontconfig1-dev, libexpat1-dev
XCS-Cross-Host-Build-Depends: debhelper, cdbs, cdbs-embedded, autoconf, libtool, automake, autotools-dev, pkg-config, libglib2.0-dev
Standards-Version: 3.6.1

Package: libpango1.0
Section: gui
Architecture: any
Depends: ${shlibs:Depends}
Description: Layout and rendering of internationalized text
 Pango is a library for layout and rendering of text, with an emphasis
 on internationalization. Pango can be used anywhere that text layout is
 needed. however, most of the work on Pango-1.0 was done using the GTK+
 widget toolkit as a test platform. Pango forms the core of text and
 font handling for GTK+-2.0.
 .
 Pango is designed to be modular; the core Pango layout can be used with
 four different font backends:
  - Core X windowing system fonts
  - Client-side fonts on X using the Xft library
  - Direct rendering of scalable fonts using the FreeType library
  - Native fonts on Microsoft backends
 .
 This package contains the shared libraries.

Package: libpango1.0-common
Section: gui
Architecture: any
Depends: libexpat1, ${shlibs:Depends}
Recommends: x-ttcidfont-conf
Replaces: libpango0, libpango-common (<< 1.0.0)
Description: Modules and configuration files for the Pango
 Pango is a library for layout and rendering of text, with an emphasis
 on internationalization. Pango can be used anywhere that text layout is
 needed. however, most of the work on Pango-1.0 was done using the GTK+
 widget toolkit as a test platform. Pango forms the core of text and
 font handling for GTK+-2.0.
 .
 Pango is designed to be modular; the core Pango layout can be used with
 four different font backends:
  - Core X windowing system fonts
  - Client-side fonts on X using the Xft library
  - Direct rendering of scalable fonts using the FreeType library
  - Native fonts on Microsoft backends
 .
 This package contains the Pango modules and the configuration files
 which Pango needs.

Package: libpango1.0-dev
Section: libdevel
Architecture: any
Depends: libpango1.0 (= ${Source-Version}), libglib2.0-dev, libfreetype6-dev, libfontconfig1-dev
Replaces: libpango-dev
Conflicts: libpango-dev
Description: Development files for the Pango
 Pango is a library for layout and rendering of text, with an emphasis
 on internationalization. Pango can be used anywhere that text layout is
 needed. however, most of the work on Pango-1.0 was done using the GTK+
 widget toolkit as a test platform. Pango forms the core of text and
 font handling for GTK+-2.0.
 .
 Pango is designed to be modular; the core Pango layout can be used with
 four different font backends:
  - Core X windowing system fonts
  - Client-side fonts on X using the Xft library
  - Direct rendering of scalable fonts using the FreeType library
  - Native fonts on Microsoft backends
 .
 This package contains the header files and some files needed for development
 with Pango.

Package: libpango1.0-dbg
Section: debug
Priority: extra
Architecture: any
Depends: libpango1.0 (= ${Source-Version})
Description: The Pango library and debugging symbols
 Pango is a library for layout and rendering of text, with an emphasis
 on internationalization. Pango can be used anywhere that text layout is
 needed. however, most of the work on Pango-1.0 was done using the GTK+
 widget toolkit as a test platform. Pango forms the core of text and
 font handling for GTK+-2.0.
 .
 Pango is designed to be modular; the core Pango layout can be used with
 four different font backends:
  - Core X windowing system fonts
  - Client-side fonts on X using the Xft library
  - Direct rendering of scalable fonts using the FreeType library
  - Native fonts on Microsoft backends
 .
 This package contains unstripped shared libraries. it is provided
 primarily to provide a backtrace with names in a debugger, this makes
 it somewhat easier to interpret core dumps. The libraries are installed
 in /usr/lib/debug and can be used by placing that directory in
 LD_LIBRARY_PATH.
 Most people will not need this package.
